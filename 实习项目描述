实习公司：华为海思ICT处理器芯片开发部 
实习时间：2019.06.25-2019.08.27
实习项目：自动驾驶的光流估计
主要职责：调研光流估计算法，包括传统算法和NN算法，给出一份详细调研记录。详细对比分析LK算法和DIS算法，出一份算法对比分析报告。用CUDA C落地实现DIS算法。
涉及技术：CUDA C、DIS、LK

一段话概括：

LK算法流程：
1.图像金字塔
2.选取特征点（算法选取）
3.本层光流初始化
4.迭代计算光流残差
5.最后一层？
6.否。光流传播到下一层，跳到3
7.是。结束

DIS算法流程：
1.图像金字塔
2.选取特征点（网格选取）
3.本层光流初始化
4.迭代计算光流残差
5.Densification
6.变分
7.最后一层？
8.否。光流传播到下一层，跳到3
9.是。结束

相同点：图像金字塔、逆向搜索策略
不同点：
      1.特征点选取。LK是特定算法选取特征点。DIS是划分网格，网格中心点为特征点
      2.插值方式。LK是二次线性插值。DIS是最近邻插值
      3.密集化。LK是只对最后一层结果。DIS是金字塔每层
      4.变分。LK没有变分。DIS是金字塔每层都有变分

传统光流估计算法流程：
（1）匹配：流程中的第一步是在两幅图片中生成相应的匹配点（块）。Patch块匹配，特征点匹配，匹配搜索策略，金字塔模型
（2）离群点过滤：来自第一步骤的计算的匹配通常包含一定量的异常值，其例如由于被遮挡或低纹理化图像区域而生成的匹配。 由于这种错误匹配可能使估计显着恶化，因此常执行某种异常值过滤，例如双向一致性检查和/或删除小的孤立光流段。 在实践中，第二步并没有消除所有异常值，但大大减少了它们的数量。
 (3)修补：在去除异常值之后，所得到的光流场通常是非密集的。 然而，由于算法流程的最后一步 - variational refinement需要密集的流场进行初始化，因此必须修复缺失的位置。一般用二次线性插值法差值得到密集光流。
（4）精细：最后一步是使用变分方法或滤波的方式改进流场。 该步骤旨在获得亚像素精度，同时另外引入某种正则化。
传统算法总结：
模型优化目标为能量方程
𝐸(𝑤)=𝐸_𝑐𝑜𝑙𝑜𝑟+〖𝛾𝐸〗_𝑔𝑟𝑎𝑑𝑖𝑒𝑛𝑡+𝛼𝐸_𝑠𝑚𝑜𝑜𝑡ℎ+𝛽𝐸_𝑚𝑎𝑡𝑐ℎ
由于𝐸(𝑤)高度非凸，非凸优化容易陷入局部最优解。其实前面算法所做的特征匹配和块匹配以及金字塔操作目的只是为了给𝐸(𝑤)一个更好地初始化光流，来使局部最优接近全局最优。
可以说𝐸(𝑤)确定了光流算法的上界,算法的其他部分只是为了逼近这个上界。
可以根据实际问题场景来修改"能量方程" 𝐸(𝑤)组成，来放宽或缩紧𝐸(𝑤)来使光流估计算法在各个场景发挥最优。比如自动驾驶场景可能水平方向光流占主要，竖直方向光流次要，设计𝐸(𝑤)或是匹配块的时候有所侧重？

灰度值一致性假设
时间连续或运动是“小运动”
空间一致假设：即所有的相邻像素有相似的运动。
梯度一致性假设
光流平滑假设


NN光流算法：
端到端解决光流估计
由图像金字塔过渡到特征金字塔
每层预测光流残差
通过corr层来计算特征相似度
后处理包括亚像素级光流，正反光流一致性检验，与变分结合等

1.开始
2.两张图片作为输入
3.Encoding（特征金字塔）
4.计算corr层
5.预测光流残差
6.最后一层?
7.否。将结果传入3
8.是。后处理
9.结束

PWC-Net：
PWC-Net 的大小只有flow-net的1/17，预测的时候速度快2倍，可以达到35f/s，同时准确率比flow-net高。
PWC-Net的思想与LiteFlowNet有很多相似之处。但没有但没那么多花里胡哨的操作





  
 

